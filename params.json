{
  "name": "Indic-OCR",
  "tagline": "The Indic-OCR Project Site",
  "body": "### Hello\r\n\r\nIndic-OCR is a collection of open source tools to enable OCRs in Indic Scripts.  \r\n\r\nIndic-OCR tools use [Tesseract](https://github.com/tesseract-ocr/tesseract) and [Olena](https://indic-ocr.github.io/olena/) for layout detection. \r\n\r\nIndic-OCR project provides a set of [tesseract ocr models](https://indic-ocr.github.io/tessdata/) which have been trained using some special techniques customised for Indic Scripts. What we have here is perhaps one of the best tesseract models for Indic Scripts you will find in open source world. Get in touch with us if you want to train models for a particular font and we will be able to help you out.  \r\n\r\n###So... what are these tools? \r\nTools | And what they are\r\n------|--------------------\r\n[Tessdata](https://indic-ocr.github.io/tessdata/) | Set of highly accurate [Tesseract](https://github.com/tesseract-ocr/tesseract) OCR models for Indic Scripts which include [Ol Chiki (Santali)](http://www.unicode.org/charts/PDF/U1C50.pdf)  and [Meetei Meyek (Manipuri)](http://www.unicode.org/charts/PDF/UABC0.pdf) scripts too\r\n[Olena](https://indic-ocr.github.io/olena/) | Perhaps the best set of tools available for layout detection in open source world.\r\n[OCR Service](https://indic-ocr.github.io/ocrservice/) | Host your own ocr service within your organisation or community (All batteries included)\r\n[LibreOCR](https://indic-ocr.github.io/LibreOCR/) | Open an image in [LibreOffice](http://www.libreoffice.org) and convert it to editable document... just like that.  \r\n[Across India](https://indic-ocr.github.io/acrossindia/) | Nearly a  [Word Lens](https://en.wikipedia.org/wiki/Word_Lens) clone of Indian Languages, but it transliterates instead of translation. Watch this [video](https://www.youtube.com/watch?v=v0WVCOieW6o)  \r\n\r\n\r\n### Designer Templates\r\nWe’ve crafted some handsome templates for you to use. Go ahead and click 'Continue to layouts' to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved.\r\n\r\n### Creating pages manually\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}